{"version":3,"sources":["Card.tsx","myComp.tsx","PageHeader.tsx","MovieTable.tsx","layout.tsx","Home.tsx","Podcasts.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","movie","React","createElement","Fragment","Category","Title","Year","toString","Director","Rating","Edited","CardList","_useState","useState","_useState2","_slicedToArray","masterArray","setMasterArray","_useState3","_useState4","loaded","setLoaded","useEffect","fetch","then","x","json","y","className","map","index","key","PageHeader","pageTitle","pageSubheader","MovieTable","Layout","id","Link","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","NavLink","Outlet","Home","Podcasts","href","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"6QA4BeA,EAfF,SAACC,GACV,IAAMC,EAAcD,EAAMC,MAE1B,OACIC,IAAAC,cAAAD,IAAAE,SAAA,KACIF,IAAAC,cAAA,UAAKF,EAAMI,UACXH,IAAAC,cAAA,UAAKF,EAAMK,OACXJ,IAAAC,cAAA,UAAKF,EAAMM,KAAKC,YAChBN,IAAAC,cAAA,UAAKF,EAAMQ,UACXP,IAAAC,cAAA,UAAKF,EAAMS,QACXR,IAAAC,cAAA,UAAKF,EAAMU,UCZR,SAASC,IACpB,IAAAC,EACqCC,mBAAkB,IAAGC,EAAAC,YAAAH,EAAA,GAAnDI,EAAWF,EAAA,GAACG,EAAcH,EAAA,GACjCI,EAC2BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAnCE,EAAMD,EAAA,GAACE,EAASF,EAAA,GAavB,OAVAG,oBAAU,WACVC,MAAM,oHAAoHC,KAAK,SAAAC,GAC3HA,EAAEC,OAAOF,KAAK,SAAAG,GACVV,EAAeU,EAAQ,KAAa,WACpCN,GAAU,QAGjB,IAGED,EAECnB,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAA,OAAK0B,UAAU,OACf3B,IAAAC,cAAA,SAAO0B,UAAU,mCACb3B,IAAAC,cAAA,aACID,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,YAGhBD,IAAAC,cAAA,aACCc,EAAYa,IAAI,SAACJ,EAAQK,GAAY,OAClC7B,IAAAC,cAAA,MAAI6B,IAAKD,EAAMvB,YACXN,IAAAC,cAACJ,EAAI,CAACiC,IAAKN,EAAEpB,MAAOL,MAAOyB,WAUhCxB,IAAAC,cAAA,YCtDX,IAiBe8B,EAjBI,SAACjC,GAClB,OACEE,IAAAC,cAAA,UAAQ0B,UAAU,YACd3B,IAAAC,cAAA,OAAK0B,UAAU,4CACX3B,IAAAC,cAAA,OAAK0B,UAAU,2CACX3B,IAAAC,cAAA,OAAK0B,UAAU,+BACX3B,IAAAC,cAAA,OAAK0B,UAAU,gBACX3B,IAAAC,cAAA,UAAKH,EAAMkC,WACXhC,IAAAC,cAAA,QAAM0B,UAAU,cAAc7B,EAAMmC,qBCS7CC,EAhBI,WACjB,OACElC,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAC8B,EAAU,CAACC,UAAU,iBAAiBC,cAAc,4DAErDjC,IAAAC,cAAA,OAAK0B,UAAU,aACb3B,IAAAC,cAAA,OAAK0B,UAAU,SACb3B,IAAAC,cAAA,OAAK0B,UAAU,OACb3B,IAAAC,cAACS,EAAQ,OAEbV,IAAAC,cAAA,OAAK0B,UAAU,YCcNQ,EAxBA,WACb,OACEnC,IAAAC,cAAAD,IAAAE,SAAA,KACIF,IAAAC,cAAA,OAAK0B,UAAU,uCAAuCS,GAAG,WACrDpC,IAAAC,cAAA,OAAK0B,UAAU,0BACX3B,IAAAC,cAACoC,IAAI,CAACC,GAAG,IAAIX,UAAU,gBAAe,QACtC3B,IAAAC,cAAA,UAAQ0B,UAAU,iBAAiBY,KAAK,SAASC,iBAAe,WAAWC,iBAAe,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,qBAAoB,OAEhM5C,IAAAC,cAAA,KAAG0B,UAAU,iBAEjB3B,IAAAC,cAAA,OAAK0B,UAAU,2BAA2BS,GAAG,oBACzCpC,IAAAC,cAAA,MAAI0B,UAAU,mCACV3B,IAAAC,cAAA,MAAI0B,UAAU,YAAW3B,IAAAC,cAAC4C,IAAO,CAAClB,UAAU,gCAAgCW,GAAG,KAAI,SACnFtC,IAAAC,cAAA,MAAI0B,UAAU,YAAW3B,IAAAC,cAAC4C,IAAO,CAAClB,UAAU,gCAAgCW,GAAG,WAAU,mBACzFtC,IAAAC,cAAA,MAAI0B,UAAU,YAAW3B,IAAAC,cAAC4C,IAAO,CAAClB,UAAU,gCAAgCW,GAAG,aAAY,iBAK3GtC,IAAAC,cAAC6C,IAAM,QCkBAC,SAlCF,WACX,OACE/C,IAAAC,cAAAD,IAAAE,SAAA,KACIF,IAAAC,cAAC8B,EAAU,CAACC,UAAU,OAAOC,cAAc,6CAC3CjC,IAAAC,cAAA,OAAK0B,UAAU,aACX3B,IAAAC,cAAA,OAAK0B,UAAU,SACX3B,IAAAC,cAAA,OAAK0B,UAAU,OACX3B,IAAAC,cAAA,MAAI0B,UAAU,yCAAwC,YACtD3B,IAAAC,cAAA,SAAG,wPAIHD,IAAAC,cAAA,SAAG,kQAIHD,IAAAC,cAAA,SAAG,kSAIHD,IAAAC,cAAA,SAAG,kRAIHD,IAAAC,cAAA,SAAG,4RAIXD,IAAAC,cAAA,OAAK0B,UAAU,aChBZqB,EAfE,WACf,OACEhD,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAC8B,EAAU,CAACC,UAAU,WAAWC,cAAc,0DAC/CjC,IAAAC,cAAA,OAAK0B,UAAU,aACb3B,IAAAC,cAAA,OAAK0B,UAAU,SACb3B,IAAAC,cAAA,OAAK0B,UAAU,mBACb3B,IAAAC,cAAA,KAAGgD,KAAK,yBAAyBtB,UAAU,0BAAyB,aAExE3B,IAAAC,cAAA,OAAK0B,UAAU,YCYNuB,MAdf,WACE,OACElD,IAAAC,cAACkD,IAAa,KACZnD,IAAAC,cAACmD,IAAM,KACLpD,IAAAC,cAACoD,IAAK,CAACC,KAAK,IAAIC,QAASvD,IAAAC,cAACkC,EAAM,OAC9BnC,IAAAC,cAACoD,IAAK,CAACxB,OAAK,EAAC0B,QAASvD,IAAAC,cAAC8C,EAAI,QAC3B/C,IAAAC,cAACoD,IAAK,CAACC,KAAK,SAASC,QAASvD,IAAAC,cAACiC,EAAU,QACzClC,IAAAC,cAACoD,IAAK,CAACC,KAAK,WAAWC,QAASvD,IAAAC,cAAC+C,EAAQ,YCHpCQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAArC,KAAAoC,EAAAE,KAAA,UAAqBtC,KAAK,SAAAuC,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,YCDDW,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHxE,IAAAC,cAACD,IAAMyE,WAAU,KACfzE,IAAAC,cAACiD,EAAG,QAORM","file":"static/js/main.0117ca17.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//Adding a type so my intellisense works better\r\ntype Movie = {\r\n    Category: String,\r\n    Title: String,\r\n    Year: Number,\r\n    Director: String,\r\n    Rating: String,\r\n    Edited: String\r\n}\r\n\r\n// This card will be the card that holds each movie. I called it card because that makes sense in my mind for dividing up a page\r\nconst Card = (props:any) => {\r\n    const movie:Movie = props.movie;\r\n    // Return fragments so it doesn't break the table\r\n    return (\r\n        <>\r\n            <td>{movie.Category}</td>\r\n            <td>{movie.Title}</td>\r\n            <td>{movie.Year.toString()}</td>\r\n            <td>{movie.Director}</td>\r\n            <td>{movie.Rating}</td>\r\n            <td>{movie.Edited}</td>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Card\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Card from \"./Card\";\r\ntype Movie = {\r\n    Category: String,\r\n    Title: String,\r\n    Year: Number,\r\n    Director: String,\r\n    Rating: String,\r\n    Edited: String\r\n}\r\n\r\nexport default function CardList(){\r\n    //Use state. I'm setting this array to be of type movie. This improves the intellesense and makes it easier to write code\r\n    const [masterArray,setMasterArray] = useState<Movie[]>([]);\r\n    //I'm also setting a boolean value that changes the state for a loaded attribute which stores either true or false if the api has been called\r\n    const [loaded,setLoaded] = useState(false);\r\n\r\n    //Using the use effect hook to call the api and set the masterArray = to the list of movies\r\n    useEffect(() =>{\r\n    fetch(\"https://script.google.com/macros/s/AKfycby-BCnXGvrPkzeGfbActgYsccQ3ADC1GBIliB6aovCs8g9wBVEuC1NUiOP6IMpyCgty/exec\").then(x=>{\r\n        x.json().then(y=>{\r\n            setMasterArray(y[\"data\"][\"MovieData\"]);\r\n            setLoaded(true);\r\n        })\r\n    })}\r\n    ,[]);\r\n\r\n    //If it is loaded render a tag with table mapping each Movie into a card\r\n    if(loaded){\r\n    return (\r\n        <>\r\n        <div className=\"col\">\r\n        <table className=\"table table-striped table-hover\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Category</th>\r\n                    <th>Title</th>\r\n                    <th>Year</th>\r\n                    <th>Director</th>\r\n                    <th>Rating</th>\r\n                    <th>Edited</th>\r\n                </tr>\r\n            </thead>\r\n        <tbody>\r\n        {masterArray.map((x:Movie,index:Number) =>\r\n            <tr key={index.toString()}>\r\n                <Card key={x.Title} movie={x} />\r\n            </tr>\r\n        )}\r\n        </tbody>\r\n        </table>\r\n        </div>\r\n        </>\r\n    );\r\n}else{\r\n    //If it isn't loaded don't map the movies into the cards\r\n    return <div></div>\r\n}\r\n}","import React from 'react'\r\n\r\nconst PageHeader = (props:any) => {\r\n  return (\r\n    <header className=\"masthead\">\r\n        <div className=\"container position-relative px-4 px-lg-5\">\r\n            <div className=\"row gx-4 gx-lg-5 justify-content-center\">\r\n                <div className=\"col-md-10 col-lg-8 col-xl-7\">\r\n                    <div className=\"site-heading\">\r\n                        <h1>{props.pageTitle}</h1>\r\n                        <span className=\"subheading\">{props.pageSubheader}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default PageHeader\r\n","import React from 'react'\r\nimport CardList from './myComp'\r\nimport PageHeader from './PageHeader'\r\nconst MovieTable = () => {\r\n  return (\r\n    <>\r\n    <PageHeader pageTitle=\"Movie Database\" pageSubheader=\"Check out some of the Greatest Movie Hits Of All Time!!\"/>\r\n\r\n    <div className='container'>\r\n      <div className='col2'></div>\r\n        <div className='col'>\r\n          <CardList/>\r\n        </div>\r\n      <div className='col2'></div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieTable\r\n","import React from 'react'\r\nimport { Outlet, Link, NavLink } from 'react-router-dom'\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light\" id=\"mainNav\">\r\n            <div className=\"container px-4 px-lg-5\">\r\n                <Link to=\"/\" className='navbar-brand'>Home</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    Menu\r\n                    <i className=\"fas fa-bars\"></i>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                    <ul className=\"navbar-nav ms-auto py-4 py-lg-0\">\r\n                        <li className=\"nav-item\"><NavLink className=\"nav-link px-lg-3 py-3 py-lg-4\" to=\"/\">Home</NavLink></li>\r\n                        <li className=\"nav-item\"><NavLink className=\"nav-link px-lg-3 py-3 py-lg-4\" to=\"/movies\">Movie Database</NavLink></li>\r\n                        <li className=\"nav-item\"><NavLink className=\"nav-link px-lg-3 py-3 py-lg-4\" to=\"/podcasts\">Podcasts</NavLink></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        <Outlet />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport JoelHilton from \"./JoelHiltonHeadshot (1).jpg\"\r\nimport PageHeader from './PageHeader'\r\nimport \"./styles.css\"\r\n\r\n// Import the image and set it as the background image on the website.\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n        <PageHeader pageTitle=\"Home\" pageSubheader=\"Welcome to the wonderful world of movies\"/>\r\n        <div className='container'>\r\n            <div className='col2'></div>\r\n                <div className='col'>\r\n                    <h1 className='text-center text-decoration-underline'>About Us</h1>\r\n                    <p>Welcome to your very own movie database! With this amazing tool at your fingertips, \r\n                        you can easily access information about your favorite movies, including their category, \r\n                        title, year of release, director, rating, and whether they need editing.</p>\r\n\r\n                    <p>This database is the perfect solution for movie enthusiasts who want to keep track of all \r\n                        their favorite films in one place. Whether you're a casual moviegoer or a hardcore cinephile,\r\n                        this tool is sure to become your go-to resource for all things movies.</p>\r\n\r\n                    <p>With the ability to categorize movies based on genre, release year, and other criteria, you \r\n                        can quickly and easily find the perfect film for any occasion. Want to watch a romantic comedy from the 90s?\r\n                        Check out our database and voila! You'll have a list of great options to choose from.</p>\r\n\r\n                    <p>In addition to helping you organize your movie collection, this database also allows you to see how we rate each film \r\n                        and mark them as needing editing. This way, you can easily keep track of which movies you want to revisit and which ones \r\n                        you need to update or clean up.</p>\r\n\r\n                    <p>Overall, this movie database is an incredibly useful tool for anyone who loves movies. \r\n                        It's easy to use and packed with all the features you need to stay on top of your movie collection. \r\n                        So why wait? Start using it today and take your movie watching experience to the next level!</p>\r\n                </div>\r\n            <div className='col2'></div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport PageHeader from './PageHeader'\r\n\r\nconst Podcasts = () => {\r\n  return (\r\n    <>\r\n    <PageHeader pageTitle=\"Podcasts\" pageSubheader=\"Check out the button below for some amazing podcasts!\" />\r\n    <div className='container'>\r\n      <div className='col2'></div>\r\n        <div className='col text-center'>\r\n          <a href='https://baconsale.com/' className='btn btn-primary btn-lg'>Podcasts</a>\r\n        </div>\r\n      <div className='col2'></div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Podcasts\r\n","import React from 'react';\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport MovieTable from './MovieTable';\r\nimport Layout from './layout';\r\nimport Home from './Home';\r\nimport Podcasts from './Podcasts';\r\n\r\n\r\n// Add router navigation to the app.(Also add inheritance for the home page)\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Layout/>}>\r\n          <Route index element={<Home/>} />\r\n          <Route path=\"movies\" element={<MovieTable />}/>\r\n          <Route path='podcasts' element={<Podcasts />} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}